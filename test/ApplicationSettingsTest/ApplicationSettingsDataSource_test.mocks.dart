// Mocks generated by Mockito 5.4.4 from annotations
// in citasnuevo/test/ApplicationSettingsTest/ApplicationSettingsDataSource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:appwrite/appwrite.dart' as _i2;
import 'package:appwrite/enums.dart' as _i11;
import 'package:appwrite/models.dart' as _i3;
import 'package:citasnuevo/App/controllerDef.dart' as _i9;
import 'package:citasnuevo/App/MainDatasource/principalDataSource.dart' as _i4;
import 'package:citasnuevo/App/RealmModels/MainDataSource/UserModel.dart'
    as _i7;
import 'package:citasnuevo/core/platform/networkInfo.dart' as _i10;
import 'package:citasnuevo/core/services/AuthService.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:realm/realm.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExecutionList_1 extends _i1.SmartFake implements _i3.ExecutionList {
  _FakeExecutionList_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExecution_2 extends _i1.SmartFake implements _i3.Execution {
  _FakeExecution_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApplicationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockApplicationDataSource extends _i1.Mock
    implements _i4.ApplicationDataSource {
  MockApplicationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set realm(_i5.Realm? _realm) => super.noSuchMethod(
        Invocation.setter(
          #realm,
          _realm,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set appSubscription(
          _i6.StreamSubscription<_i2.RealtimeMessage>? _appSubscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #appSubscription,
          _appSubscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userId(String? _userId) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          _userId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set dataStream(_i6.StreamController<Map<String, dynamic>>? _dataStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #dataStream,
          _dataStream,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userDataSet(_i7.UserModel? _userDataSet) => super.noSuchMethod(
        Invocation.setter(
          #userDataSet,
          _userDataSet,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setData(dynamic data) => super.noSuchMethod(
        Invocation.setter(
          #setData,
          data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> get getData => (super.noSuchMethod(
        Invocation.getter(#getData),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  void setUserId(String? userId) => super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addDataToStream({required Map<String, dynamic>? data}) =>
      super.noSuchMethod(
        Invocation.method(
          #addDataToStream,
          [],
          {#data: data},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearAppDataSource() => super.noSuchMethod(
        Invocation.method(
          #clearAppDataSource,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> initializeRealm() => (super.noSuchMethod(
        Invocation.method(
          #initializeRealm,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> initializeMainDataSource() => (super.noSuchMethod(
        Invocation.method(
          #initializeMainDataSource,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> getDataFromDb() => (super.noSuchMethod(
        Invocation.method(
          #getDataFromDb,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  Map<String, dynamic> mapUserModelModelToMap(_i7.UserModel? userDataSet) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapUserModelModelToMap,
          [userDataSet],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);

  @override
  _i6.Future<void> closeConnection() => (super.noSuchMethod(
        Invocation.method(
          #closeConnection,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> checkIfUserModelExists() => (super.noSuchMethod(
        Invocation.method(
          #checkIfUserModelExists,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void listenDataFromDb() => super.noSuchMethod(
        Invocation.method(
          #listenDataFromDb,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i8.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<Map<String, dynamic>> logUser(
          {required _i9.SignInProviders? signInProviders}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logUser,
          [],
          {#signInProviders: signInProviders},
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> userAlreadySignedIn() => (super.noSuchMethod(
        Invocation.method(
          #userAlreadySignedIn,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [NetworkInfoContract].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoContract extends _i1.Mock
    implements _i10.NetworkInfoContract {
  MockNetworkInfoContract() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> checkConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkConnection,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [Functions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFunctions extends _i1.Mock implements _i2.Functions {
  MockFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i6.Future<_i3.ExecutionList> listExecutions({
    required String? functionId,
    List<String>? queries,
    String? search,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listExecutions,
          [],
          {
            #functionId: functionId,
            #queries: queries,
            #search: search,
          },
        ),
        returnValue: _i6.Future<_i3.ExecutionList>.value(_FakeExecutionList_1(
          this,
          Invocation.method(
            #listExecutions,
            [],
            {
              #functionId: functionId,
              #queries: queries,
              #search: search,
            },
          ),
        )),
      ) as _i6.Future<_i3.ExecutionList>);

  @override
  _i6.Future<_i3.Execution> createExecution({
    required String? functionId,
    String? body,
    bool? xasync,
    String? path,
    _i11.ExecutionMethod? method,
    Map<dynamic, dynamic>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createExecution,
          [],
          {
            #functionId: functionId,
            #body: body,
            #xasync: xasync,
            #path: path,
            #method: method,
            #headers: headers,
          },
        ),
        returnValue: _i6.Future<_i3.Execution>.value(_FakeExecution_2(
          this,
          Invocation.method(
            #createExecution,
            [],
            {
              #functionId: functionId,
              #body: body,
              #xasync: xasync,
              #path: path,
              #method: method,
              #headers: headers,
            },
          ),
        )),
      ) as _i6.Future<_i3.Execution>);

  @override
  _i6.Future<_i3.Execution> getExecution({
    required String? functionId,
    required String? executionId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExecution,
          [],
          {
            #functionId: functionId,
            #executionId: executionId,
          },
        ),
        returnValue: _i6.Future<_i3.Execution>.value(_FakeExecution_2(
          this,
          Invocation.method(
            #getExecution,
            [],
            {
              #functionId: functionId,
              #executionId: executionId,
            },
          ),
        )),
      ) as _i6.Future<_i3.Execution>);
}
